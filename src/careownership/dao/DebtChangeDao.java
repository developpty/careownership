/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package careownership.dao;

import java.util.Date;
import careownership.dto.*;
import careownership.exceptions.*;

public interface DebtChangeDao
{
	/** 
	 * Inserts a new row in the debt_change table.
	 */
	public DebtChangePk insert(DebtChange dto) throws DebtChangeDaoException;

	/** 
	 * Updates a single row in the debt_change table.
	 */
	public void update(DebtChangePk pk, DebtChange dto) throws DebtChangeDaoException;

	/** 
	 * Deletes a single row in the debt_change table.
	 */
	public void delete(DebtChangePk pk) throws DebtChangeDaoException;

	/** 
	 * Returns the rows from the debt_change table that matches the specified primary-key value.
	 */
	public DebtChange findByPrimaryKey(DebtChangePk pk) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'debt_change_id = :debtChangeId'.
	 */
	public DebtChange findByPrimaryKey(int debtChangeId) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria ''.
	 */
	public DebtChange[] findAll() throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'mentee_id = :menteeId'.
	 */
	public DebtChange[] findByMentees(int menteeId) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'debt_change_id = :debtChangeId'.
	 */
	public DebtChange[] findWhereDebtChangeIdEquals(int debtChangeId) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'current_total_debt = :currentTotalDebt'.
	 */
	public DebtChange[] findWhereCurrentTotalDebtEquals(int currentTotalDebt) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'current_debt_type = :currentDebtType'.
	 */
	public DebtChange[] findWhereCurrentDebtTypeEquals(String currentDebtType) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'current_debt_description = :currentDebtDescription'.
	 */
	public DebtChange[] findWhereCurrentDebtDescriptionEquals(String currentDebtDescription) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'current_debt_date = :currentDebtDate'.
	 */
	public DebtChange[] findWhereCurrentDebtDateEquals(Date currentDebtDate) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the criteria 'mentee_id = :menteeId'.
	 */
	public DebtChange[] findWhereMenteeIdEquals(int menteeId) throws DebtChangeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the debt_change table that match the specified arbitrary SQL statement
	 */
	public DebtChange[] findByDynamicSelect(String sql, Object[] sqlParams) throws DebtChangeDaoException;

	/** 
	 * Returns all rows from the debt_change table that match the specified arbitrary SQL statement
	 */
	public DebtChange[] findByDynamicWhere(String sql, Object[] sqlParams) throws DebtChangeDaoException;

}
