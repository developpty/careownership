/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package careownership.dao;

import careownership.dto.*;
import careownership.exceptions.*;

public interface InitialEmploymentDao
{
	/** 
	 * Inserts a new row in the initial_employment table.
	 */
	public InitialEmploymentPk insert(InitialEmployment dto) throws InitialEmploymentDaoException;

	/** 
	 * Updates a single row in the initial_employment table.
	 */
	public void update(InitialEmploymentPk pk, InitialEmployment dto) throws InitialEmploymentDaoException;

	/** 
	 * Deletes a single row in the initial_employment table.
	 */
	public void delete(InitialEmploymentPk pk) throws InitialEmploymentDaoException;

	/** 
	 * Returns the rows from the initial_employment table that matches the specified primary-key value.
	 */
	public InitialEmployment findByPrimaryKey(InitialEmploymentPk pk) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_id = :initialEmploymentId'.
	 */
	public InitialEmployment findByPrimaryKey(int initialEmploymentId) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria ''.
	 */
	public InitialEmployment[] findAll() throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'mentee_id = :menteeId'.
	 */
	public InitialEmployment[] findByMentees(int menteeId) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_id = :initialEmploymentId'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentIdEquals(int initialEmploymentId) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_position = :initialEmploymentPosition'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentPositionEquals(String initialEmploymentPosition) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employer = :initialEmployer'.
	 */
	public InitialEmployment[] findWhereInitialEmployerEquals(String initialEmployer) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_earnings = :initialEmploymentEarnings'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentEarningsEquals(int initialEmploymentEarnings) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_contact_person = :initialEmploymentContactPerson'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentContactPersonEquals(String initialEmploymentContactPerson) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employmen_contact_person_contact_info = :initialEmploymenContactPersonContactInfo'.
	 */
	public InitialEmployment[] findWhereInitialEmploymenContactPersonContactInfoEquals(String initialEmploymenContactPersonContactInfo) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_contact_person_contact_permission = :initialEmploymentContactPersonContactPermission'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentContactPersonContactPermissionEquals(String initialEmploymentContactPersonContactPermission) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_description = :initialEmploymentDescription'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentDescriptionEquals(String initialEmploymentDescription) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'initial_employment_duration_months = :initialEmploymentDurationMonths'.
	 */
	public InitialEmployment[] findWhereInitialEmploymentDurationMonthsEquals(int initialEmploymentDurationMonths) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the criteria 'mentee_id = :menteeId'.
	 */
	public InitialEmployment[] findWhereMenteeIdEquals(int menteeId) throws InitialEmploymentDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the initial_employment table that match the specified arbitrary SQL statement
	 */
	public InitialEmployment[] findByDynamicSelect(String sql, Object[] sqlParams) throws InitialEmploymentDaoException;

	/** 
	 * Returns all rows from the initial_employment table that match the specified arbitrary SQL statement
	 */
	public InitialEmployment[] findByDynamicWhere(String sql, Object[] sqlParams) throws InitialEmploymentDaoException;

}
