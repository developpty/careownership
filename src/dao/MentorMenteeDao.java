/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package dao;

import dto.*;
import exceptions.*;

public interface MentorMenteeDao
{
	/** 
	 * Inserts a new row in the mentor_mentee table.
	 */
	public MentorMenteePk insert(MentorMentee dto) throws MentorMenteeDaoException;

	/** 
	 * Updates a single row in the mentor_mentee table.
	 */
	public void update(MentorMenteePk pk, MentorMentee dto) throws MentorMenteeDaoException;

	/** 
	 * Deletes a single row in the mentor_mentee table.
	 */
	public void delete(MentorMenteePk pk) throws MentorMenteeDaoException;

	/** 
	 * Returns the rows from the mentor_mentee table that matches the specified primary-key value.
	 */
	public MentorMentee findByPrimaryKey(MentorMenteePk pk) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria 'mentor_id = :mentorId AND mentee_id = :menteeId'.
	 */
	public MentorMentee findByPrimaryKey(int mentorId, int menteeId) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria ''.
	 */
	public MentorMentee[] findAll() throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria 'mentee_id = :menteeId'.
	 */
	public MentorMentee[] findByMentees(int menteeId) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria 'mentor_id = :mentorId'.
	 */
	public MentorMentee[] findByMentors(int mentorId) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria 'mentor_id = :mentorId'.
	 */
	public MentorMentee[] findWhereMentorIdEquals(int mentorId) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the criteria 'mentee_id = :menteeId'.
	 */
	public MentorMentee[] findWhereMenteeIdEquals(int menteeId) throws MentorMenteeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the mentor_mentee table that match the specified arbitrary SQL statement
	 */
	public MentorMentee[] findByDynamicSelect(String sql, Object[] sqlParams) throws MentorMenteeDaoException;

	/** 
	 * Returns all rows from the mentor_mentee table that match the specified arbitrary SQL statement
	 */
	public MentorMentee[] findByDynamicWhere(String sql, Object[] sqlParams) throws MentorMenteeDaoException;

}
