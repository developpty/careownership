/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package dao;

import dto.*;
import exceptions.*;

public interface MenteesDao
{
	/** 
	 * Inserts a new row in the mentees table.
	 */
	public MenteesPk insert(Mentees dto) throws MenteesDaoException;

	/** 
	 * Updates a single row in the mentees table.
	 */
	public void update(MenteesPk pk, Mentees dto) throws MenteesDaoException;

	/** 
	 * Deletes a single row in the mentees table.
	 */
	public void delete(MenteesPk pk) throws MenteesDaoException;

	/** 
	 * Returns the rows from the mentees table that matches the specified primary-key value.
	 */
	public Mentees findByPrimaryKey(MenteesPk pk) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'mentee_id = :menteeId'.
	 */
	public Mentees findByPrimaryKey(int menteeId) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria ''.
	 */
	public Mentees[] findAll() throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'mentee_id = :menteeId'.
	 */
	public Mentees[] findWhereMenteeIdEquals(int menteeId) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'first_name = :firstName'.
	 */
	public Mentees[] findWhereFirstNameEquals(String firstName) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'last_name = :lastName'.
	 */
	public Mentees[] findWhereLastNameEquals(String lastName) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'SSN = :ssn'.
	 */
	public Mentees[] findWhereSsnEquals(String ssn) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'sex = :sex'.
	 */
	public Mentees[] findWhereSexEquals(String sex) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'age = :age'.
	 */
	public Mentees[] findWhereAgeEquals(int age) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'maritial_status = :maritialStatus'.
	 */
	public Mentees[] findWhereMaritialStatusEquals(String maritialStatus) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'address = :address'.
	 */
	public Mentees[] findWhereAddressEquals(String address) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'zipcode = :zipcode'.
	 */
	public Mentees[] findWhereZipcodeEquals(String zipcode) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the criteria 'highest_education_level = :highestEducationLevel'.
	 */
	public Mentees[] findWhereHighestEducationLevelEquals(String highestEducationLevel) throws MenteesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the mentees table that match the specified arbitrary SQL statement
	 */
	public Mentees[] findByDynamicSelect(String sql, Object[] sqlParams) throws MenteesDaoException;

	/** 
	 * Returns all rows from the mentees table that match the specified arbitrary SQL statement
	 */
	public Mentees[] findByDynamicWhere(String sql, Object[] sqlParams) throws MenteesDaoException;

}
